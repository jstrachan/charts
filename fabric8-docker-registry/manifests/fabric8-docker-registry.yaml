---
apiVersion: "v1"
kind: "Template"
labels: {}
metadata:
  annotations:
    fabric8.fabric8-docker-registry/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/fabric8-docker-registry/src/main/fabric8/icon.png"
    description: "# Private Docker Registry\n\nHosted private [docker registry](https://github.com/docker/distribution)\n\
      \nThis project will create a private docker registry and service.  When run\
      \ on OpenShift with fabric8 a route will be created note the port is required\
      \ in the image name.\n\n# Usage\n\n```\ndocker build --rm -t fabric8-docker-registry.vagrant.f8:80/myorg/example-image\
      \ .\n\ndocker push fabric8-docker-registry.vagrant.f8:80/myorg/example-image\n\
      ```\n"
    fabric8.fabric8-docker-registry/summary: "[Docker Registry](https://github.com/docker/distribution)\
      \ - A private docker registry"
  labels: {}
  name: "fabric8-docker-registry"
objects:
- apiVersion: "v1"
  kind: "Service"
  metadata:
    annotations: {}
    labels:
      project: "fabric8-docker-registry"
      provider: "fabric8"
      version: "2.2.75-SNAPSHOT"
      group: "io.fabric8.devops.apps"
    name: "fabric8-docker-registry"
  spec:
    deprecatedPublicIPs: []
    externalIPs: []
    ports:
    - port: 80
      protocol: "TCP"
      targetPort: 5000
    selector:
      project: "fabric8-docker-registry"
      provider: "fabric8"
      group: "io.fabric8.devops.apps"
    type: "LoadBalancer"
- apiVersion: "v1"
  kind: "ReplicationController"
  metadata:
    annotations:
      fabric8.io/git-branch: "stuff"
      fabric8.io/git-commit: "b37fca11f6cd7a789d0f1d54825f0557b39112d4"
      fabric8.io/build-url: "http://jenkins.vagrant.f8/job/oss-parent"
    labels:
      project: "fabric8-docker-registry"
      provider: "fabric8"
      version: "2.2.75-SNAPSHOT"
      group: "io.fabric8.devops.apps"
    name: "fabric8-docker-registry"
  spec:
    replicas: 1
    selector:
      project: "fabric8-docker-registry"
      provider: "fabric8"
      version: "2.2.75-SNAPSHOT"
      group: "io.fabric8.devops.apps"
    template:
      metadata:
        annotations: {}
        labels:
          project: "fabric8-docker-registry"
          provider: "fabric8"
          version: "2.2.75-SNAPSHOT"
          group: "io.fabric8.devops.apps"
      spec:
        containers:
        - args: []
          command: []
          env:
          - name: "KUBERNETES_NAMESPACE"
            valueFrom:
              fieldRef:
                fieldPath: "metadata.namespace"
          image: "registry:2"
          imagePullPolicy: "IfNotPresent"
          name: "fabric8-docker-registry"
          ports:
          - containerPort: 5000
            name: "http"
          - containerPort: 8778
            name: "jolokia"
          securityContext: {}
          volumeMounts: []
        imagePullSecrets: []
        nodeSelector: {}
        volumes: []
parameters: []
