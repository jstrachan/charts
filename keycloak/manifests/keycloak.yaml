---
apiVersion: "v1"
kind: "Template"
labels: {}
metadata:
  annotations:
    fabric8.keycloak/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/keycloak/src/main/fabric8/icon.svg"
    description: "Built on top of the OAuth 2.0, Open ID Connect, JSON Web Token (JWT)\
      \ and SAML 2.0 specifications.\n"
    fabric8.keycloak/summary: "Keycloack (security) - Integrated SSO and IDM for browser\
      \ apps and RESTful services"
  labels: {}
  name: "keycloak"
objects:
- apiVersion: "v1"
  kind: "Service"
  metadata:
    annotations: {}
    labels:
      project: "keycloak"
      provider: "fabric8"
      version: "2.2.75-SNAPSHOT"
      group: "io.fabric8.devops.apps"
    name: "keycloak"
  spec:
    deprecatedPublicIPs: []
    externalIPs: []
    ports:
    - port: 80
      protocol: "TCP"
      targetPort: "http"
    selector:
      project: "keycloak"
      provider: "fabric8"
      group: "io.fabric8.devops.apps"
    type: "LoadBalancer"
- apiVersion: "v1"
  kind: "ReplicationController"
  metadata:
    annotations:
      fabric8.io/git-branch: "stuff"
      fabric8.io/git-commit: "b37fca11f6cd7a789d0f1d54825f0557b39112d4"
      fabric8.io/build-url: "http://jenkins.vagrant.f8/job/oss-parent"
    labels:
      project: "keycloak"
      provider: "fabric8"
      version: "2.2.75-SNAPSHOT"
      group: "io.fabric8.devops.apps"
    name: "keycloak"
  spec:
    replicas: 1
    selector:
      project: "keycloak"
      provider: "fabric8"
      version: "2.2.75-SNAPSHOT"
      group: "io.fabric8.devops.apps"
    template:
      metadata:
        annotations: {}
        labels:
          project: "keycloak"
          provider: "fabric8"
          version: "2.2.75-SNAPSHOT"
          group: "io.fabric8.devops.apps"
      spec:
        containers:
        - args: []
          command: []
          env:
          - name: "KUBERNETES_NAMESPACE"
            valueFrom:
              fieldRef:
                fieldPath: "metadata.namespace"
          image: "jboss/keycloak:1.3.1.Final"
          name: "keycloak"
          ports:
          - containerPort: 8080
            name: "http"
          securityContext: {}
          volumeMounts: []
        imagePullSecrets: []
        nodeSelector: {}
        volumes: []
parameters: []
